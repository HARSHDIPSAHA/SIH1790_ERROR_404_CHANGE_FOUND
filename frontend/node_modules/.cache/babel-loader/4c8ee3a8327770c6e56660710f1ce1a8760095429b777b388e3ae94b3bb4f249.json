{"ast":null,"code":"var _jsxFileName = \"/home/anshika/recover/src/components/branchlogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../css/branchlogin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BranchLogin() {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [otp, setOtp] = useState('');\n  const [generatedOtp, setGeneratedOtp] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\n  const navigate = useNavigate();\n\n  // Function to simulate sending OTP via an AJAX request\n  const sendOtp = e => {\n    e.preventDefault();\n\n    // Simulate OTP generation (e.g., backend sends OTP to the user's phone number)\n    const simulatedOtp = Math.floor(1000 + Math.random() * 9000).toString(); // Random 4-digit OTP\n    setGeneratedOtp(simulatedOtp);\n    setIsOtpSent(true);\n\n    // In a real scenario, you'd send the phone number to the backend to send OTP\n    console.log('Sending OTP to:', phone, 'OTP:', simulatedOtp);\n    alert(`OTP sent to your phone: ${simulatedOtp}`);\n  };\n\n  // Function to verify OTP\n  const verifyOtp = e => {\n    e.preventDefault();\n    if (otp === generatedOtp) {\n      setIsOtpVerified(true);\n      console.log('OTP verified successfully');\n      navigate('/user-dashboard'); // Navigate to the User Dashboard upon success\n    } else {\n      alert('Invalid OTP, please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"branch-login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), !isOtpSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendOtp,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"tel\",\n            id: \"phone\",\n            value: phone,\n            onChange: e => setPhone(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: verifyOtp,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"otp\",\n            children: \"Enter OTP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"otp\",\n            value: otp,\n            onChange: e => setOtp(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Verify OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), isOtpVerified && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Login successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(BranchLogin, \"jhcy9sVQAJY72okdie+XtxaFkCA=\", false, function () {\n  return [useNavigate];\n});\n_c = BranchLogin;\nexport default BranchLogin;\nvar _c;\n$RefreshReg$(_c, \"BranchLogin\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","BranchLogin","_s","phone","setPhone","otp","setOtp","generatedOtp","setGeneratedOtp","isOtpSent","setIsOtpSent","isOtpVerified","setIsOtpVerified","navigate","sendOtp","e","preventDefault","simulatedOtp","Math","floor","random","toString","console","log","alert","verifyOtp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/anshika/recover/src/components/branchlogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; \nimport '../css/branchlogin.css'; \n\nfunction BranchLogin() {\n  const [phone, setPhone] = useState('');\n  const [otp, setOtp] = useState('');\n  const [generatedOtp, setGeneratedOtp] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\n  const navigate = useNavigate();\n\n  // Function to simulate sending OTP via an AJAX request\n  const sendOtp = (e) => {\n    e.preventDefault();\n\n    // Simulate OTP generation (e.g., backend sends OTP to the user's phone number)\n    const simulatedOtp = Math.floor(1000 + Math.random() * 9000).toString(); // Random 4-digit OTP\n    setGeneratedOtp(simulatedOtp);\n    setIsOtpSent(true);\n\n    // In a real scenario, you'd send the phone number to the backend to send OTP\n    console.log('Sending OTP to:', phone, 'OTP:', simulatedOtp);\n    alert(`OTP sent to your phone: ${simulatedOtp}`);\n  };\n\n  // Function to verify OTP\n  const verifyOtp = (e) => {\n    e.preventDefault();\n    if (otp === generatedOtp) {\n      setIsOtpVerified(true);\n      console.log('OTP verified successfully');\n      navigate('/user-dashboard'); // Navigate to the User Dashboard upon success\n    } else {\n      alert('Invalid OTP, please try again.');\n    }\n  };\n\n  return (\n    <div className=\"branch-login-container\">\n      <div className=\"login-card\">\n        <h2>User Login</h2>\n        {!isOtpSent ? (\n          <form onSubmit={sendOtp}>\n            <div className=\"input-group\">\n              <label htmlFor=\"phone\">Phone Number:</label>\n              <input\n                type=\"tel\"\n                id=\"phone\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"login-button\">Send OTP</button>\n          </form>\n        ) : (\n          <form onSubmit={verifyOtp}>\n            <div className=\"input-group\">\n              <label htmlFor=\"otp\">Enter OTP:</label>\n              <input\n                type=\"text\"\n                id=\"otp\"\n                value={otp}\n                onChange={(e) => setOtp(e.target.value)}\n                required\n              />\n            </div>\n            <button type=\"submit\" className=\"login-button\">Verify OTP</button>\n          </form>\n        )}\n        {isOtpVerified && <p>Login successful!</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default BranchLogin;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMgB,QAAQ,GAAGf,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMgB,OAAO,GAAIC,CAAC,IAAK;IACrBA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,GAAGD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzEb,eAAe,CAACS,YAAY,CAAC;IAC7BP,YAAY,CAAC,IAAI,CAAC;;IAElB;IACAY,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEpB,KAAK,EAAE,MAAM,EAAEc,YAAY,CAAC;IAC3DO,KAAK,CAAC,2BAA2BP,YAAY,EAAE,CAAC;EAClD,CAAC;;EAED;EACA,MAAMQ,SAAS,GAAIV,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIX,GAAG,KAAKE,YAAY,EAAE;MACxBK,gBAAgB,CAAC,IAAI,CAAC;MACtBU,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCV,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC/B,CAAC,MAAM;MACLW,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,oBACExB,OAAA;IAAK0B,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrC3B,OAAA;MAAK0B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB3B,OAAA;QAAA2B,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClB,CAACtB,SAAS,gBACTT,OAAA;QAAMgC,QAAQ,EAAElB,OAAQ;QAAAa,QAAA,gBACtB3B,OAAA;UAAK0B,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3B,OAAA;YAAOiC,OAAO,EAAC,OAAO;YAAAN,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5C/B,OAAA;YACEkC,IAAI,EAAC,KAAK;YACVC,EAAE,EAAC,OAAO;YACVC,KAAK,EAAEjC,KAAM;YACbkC,QAAQ,EAAGtB,CAAC,IAAKX,QAAQ,CAACW,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/B,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,gBAEP/B,OAAA;QAAMgC,QAAQ,EAAEP,SAAU;QAAAE,QAAA,gBACxB3B,OAAA;UAAK0B,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3B,OAAA;YAAOiC,OAAO,EAAC,KAAK;YAAAN,QAAA,EAAC;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvC/B,OAAA;YACEkC,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,KAAK;YACRC,KAAK,EAAE/B,GAAI;YACXgC,QAAQ,EAAGtB,CAAC,IAAKT,MAAM,CAACS,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;YACxCG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/B,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D,CACP,EACApB,aAAa,iBAAIX,OAAA;QAAA2B,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7B,EAAA,CAvEQD,WAAW;EAAA,QAMDH,WAAW;AAAA;AAAA0C,EAAA,GANrBvC,WAAW;AAyEpB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}